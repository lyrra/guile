name: CI_Windows

on:
  pull_request:
    branches:
    - wip-mingw
  schedule:
    - cron: '0 4 */7 * *'
  workflow_dispatch:
    inputs:
      build_mode:
        description: 'Build mode: devel_build, nightly_build, testing_build, stable_build'
        required: true
        default: 'devel_build'
      publish:
        description: 'Publish to FTP: on - publish'
        required: false
        default: 'off'   

jobs:
  build_x64:
    runs-on: windows-2019
    steps:
    - name: Cancel Previous Runs
      uses: styfle/cancel-workflow-action@0.5.0
      with:
        access_token: ${{ github.token }}
    - name: Clone repository
      uses: actions/checkout@v2
      with:
        submodules: 'true'
    - name: "Configure workflow"
      shell: bash
      run: |
        # bash ./build/ci/tools/make_build_mode_env.sh -e ${{ github.event_name }} -m ${{ github.event.inputs.build_mode }}
        # BUILD_MODE=$(cat ./build.artifacts/env/build_mode.env)

        # DO_PUBLISH='false'
        # if [[ "${{ github.event.inputs.publish }}" == "on" || "$BUILD_MODE" == "nightly_build" ]]; then 
        #   DO_PUBLISH='true'
        #   if [ -z "${{ secrets.OSUOSL_SSH_ENCRYPT_SECRET }}" ]; then 
        #     echo "warning: not set OSUOSL_SSH_ENCRYPT_SECRET, publish disabled" 
        #     DO_PUBLISH='false'
        #   fi  
        # fi

        # DO_CHECKSUM='true'
        # if [ "$BUILD_MODE" == "devel_build" ]; then DO_CHECKSUM='false'; fi

        # DO_APPCAST='true'
        # if [ "$BUILD_MODE" == "devel_build" ]; then DO_APPCAST='false'; fi

        DO_BUILD='true'

        echo "BUILD_MODE=$BUILD_MODE" >> $GITHUB_ENV
        echo "BUILD_MODE: $BUILD_MODE"
        echo "DO_BUILD=$DO_BUILD" >> $GITHUB_ENV
        echo "DO_BUILD: $DO_BUILD"
        echo "DO_PUBLISH=$DO_PUBLISH" >> $GITHUB_ENV
        echo "DO_PUBLISH: $DO_PUBLISH"
        echo "DO_CHECKSUM=$DO_CHECKSUM" >> $GITHUB_ENV
        echo "DO_CHECKSUM: $DO_CHECKSUM"
        echo "DO_APPCAST=$DO_APPCAST" >> $GITHUB_ENV
        echo "DO_APPCAST: $DO_APPCAST"

    - name: Install MSYS2
      shell: bash
      run: |
        bash ./build/ci/tools/setup_mingw.sh
    - name: Setup MSYS2
      shell: bash
      run: |
        ./build/ci/tools/package_mingw.sh
    #- name: Build
    #  if: env.DO_BUILD == 'true'
    #  shell: cmd
    #  run: |
    #    build\ci\windows\build.bat -n ${{ github.run_id }}
    #- name: Package 
    #  if: env.DO_BUILD == 'true'
    #  shell: cmd
    #  run: |
    #    IF ${{ secrets.WIN_SIGN_CERTIFICATE_ENCRYPT_SECRET != 0 }} == true ( SET S_S=${{ secrets.WIN_SIGN_CERTIFICATE_ENCRYPT_SECRET }} ) ELSE ( SET S_S="''" )
    #    IF ${{ secrets.WIN_SIGN_CERTIFICATE_PASSWORD != 0 }} == true ( SET S_P=${{ secrets.WIN_SIGN_CERTIFICATE_PASSWORD }} ) ELSE ( SET S_P="''" )
    #    IF ${{ env.BUILD_MODE }} == stable_build ( SET GUID=${{ secrets.WIN_MSI_STABLE_GUID }} ) ELSE ( SET GUID=${{ secrets.WIN_MSI_TESTING_GUID }} )
    #    build\ci\windows\package.bat --signsecret %S_S% --signpass %S_P% --guid %GUID%
    #- name: Checksum
    #  if: env.DO_CHECKSUM == 'true' 
    #  run: |
    #    bash ./build/ci/tools/checksum.sh     
    #- name: Publish package
    #  if: env.DO_PUBLISH == 'true'
    #  shell: bash
    #  run: |
    #    bash ./build/ci/tools/osuosl/publish.sh -s ${{ secrets.OSUOSL_SSH_ENCRYPT_SECRET }} --os windows -v 3
    #- name: Upload artifacts on GitHub
    #  if: ${{ always() }}
    #  uses: actions/upload-artifact@v2
    #  with:
    #    name: guile_mingw_x64_${{ github.run_id }}
    #    path: build.artifacts\ 

